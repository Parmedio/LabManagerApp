@model ConcordiaLab.Controllers.Mock_Data.ViewModel.MockExperimentDetails

@{
    ViewData["Title"] = "Experiment Detail";
    Layout = "_Layout";
    var experiment = Model.Experiment;
}

<h1 class="display-5">@ViewData["Title"]</h1>

<div class="custom-card">
    <div class="card-body">
        <div class="d-flex align-items-center mb-1">
            <h5 class="experiment-title w-100 my-3">@experiment.Title</h5>
        </div>
        <h6 class="card-subtitle mb-3 text-muted">
            <b>Scientists:</b><br />
            @{
                var scientistsCount = experiment.Scientists.Count();
                var scientistsList = string.Join(", ", experiment.Scientists.Select(s => $"{s.Name[0]}. {s.Surname}"));

                if (scientistsCount > 0)
                {
                    <span>@scientistsList</span>
                }
            }
        </h6>
        <div>
            <h6 class="card-subtitle mb-2">
                <b>Last comment:</b><br />
            </h6>
            <p>@experiment.LastComment</p>
        </div>
        <div>
            <h6 class="card-subtitle mb-2">
                <b>Description:</b><br />
            </h6>
            <p>@experiment.Description</p>
        </div>
        <div class="d-flex">
            <div class="d-flex align-items-center w-50 bg-custom me-1 rounded-2">
                <p class="segment"><b>priority</b></p>
                <p class="priority"><b>@experiment.Priority</b></p>
            </div>
            <div class="d-flex align-items-center w-50 bg-custom ms-1 rounded-2">
                <svg class="segment" xmlns="http://www.w3.org/2000/svg" width="16" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z" />
                    <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z" />
                </svg>
                <p class="due-date">@(experiment.DueDate != null ? experiment.DueDate?.ToString("dd ") + experiment.DueDate?.ToString("MMM").Substring(0, 3).ToUpper() : "no date")</p>
            </div>
        </div>
    </div>
</div>

<a class="btn btn-outline-primary" asp-action="Index">go back</a>

<style>
    .experiment-title {
        margin: 0px 0px 0px 0px;
        padding: 0px;
    }

    .custom-card {
        width: 60rem;
        border-radius: 10px;
        border: 1px solid lightgrey;
        box-shadow: 0px 0px 14px lightgrey;
        margin: 0px 5px 10px 5px;
        padding: 0px;
    }

    .bg-custom {
        background-color: lightgrey;
    }

    .due-date {
        background-color: white;
        width: 50%;
        text-align: center;
        border-radius: 4px;
        margin: 6px;
    }

    .low {
        color: gray;
        background-color: whitesmoke;
    }

    .medium {
        color: darkgoldenrod;
        background-color: khaki;
    }

    .high {
        color: darkred;
        background-color: mistyrose;
    }

    .priority {
        width: 50%;
        text-align: center;
        border-radius: 4px;
        margin: 6px;
    }

    .segment {
        width: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 2px;
    }
</style>

<script>
    var elements = document.getElementsByClassName('priority');
    var i = elements.length - 1;

    while (i >= 0) {
        var element = elements[i];
        var priority = element.innerText.trim();

        if (priority === 'Low') {
            element.classList.add('low');
        } else if (priority === 'Medium') {
            element.classList.add('medium');
        } else if (priority === 'High') {
            element.classList.add('high');
        }

        i--;
    }
</script>