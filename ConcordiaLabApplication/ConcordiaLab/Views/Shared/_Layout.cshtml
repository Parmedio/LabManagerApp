@using ConcordiaLab.ViewModels;

@{
    var viewMode = ViewData["ViewMode"] as IEnumerable<string> ?? Enumerable.Empty<string>();
    var selectedViewMode = ViewData["SelectedViewMode"] as string ?? string.Empty;

    var experimentId = ViewData["ExperimentId"] as int?;
    var selectedScientistId = ViewData["SelectedScientistId"] as int?;

    var scientists = ViewData["Scientists"] as IEnumerable<ViewMScientist> ?? Enumerable.Empty<ViewMScientist>();
    
    var thereIsConnection = ViewData["Connection"] as bool?;
    var connectionLightIndicator = (bool)thereIsConnection ? "light-on" : "light-off";
    var connectionMessage = (bool)thereIsConnection ? "active connection" : "no connection";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Institution"] - @ViewData["Title"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ConcordiaLab.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="About" asp-route-scientistId="@selectedScientistId" asp-route-selectedViewMode="@selectedViewMode">About</a>
                </div>
                <div class="d-flex justify-content-center align-items-center" style="width: 40%;">
                    <form class="d-flex justify-content-end align-items-center me-1" style="width: 20%;" method="get" action="@Url.Action("DownloadReport", "Home")">
                        <button class="btn btn-outline-secondary" type="submit" id="downloadButton">get report</button>
                    </form>
                    <div class="select-box">
                        <h6 class="select-topic">user</h6>
                        <form class="select-dropdown" id="scientist-form" method="get" asp-controller="Home" asp-action="@ViewContext.RouteData.Values["action"]">
                            <input type="hidden" name="experimentId" value="@ViewData["ExperimentId"]" />
                            <input type="hidden" name="selectedViewMode" value="@ViewData["SelectedViewMode"]" />
                            <select id="scientist-dropdown" class="form-select" name="scientistId" onchange="document.getElementById('scientist-form').submit()">
                                <option value="0" selected="@(selectedScientistId == -1)">All Scientist</option>
                                @foreach (var scientist in scientists)
                                {
                                    <option value="@scientist.Id" selected="@(scientist.Id == selectedScientistId)">@scientist.UserName</option>
                                }
                            </select>
                        </form>
                    </div>
                    <div class="select-box">
                        <h6 class="select-topic">view by</h6>
                        <form class="select-dropdown" id="viewmode-form" method="get" asp-controller="Home" asp-action="@ViewContext.RouteData.Values["action"]">
                            <input type="hidden" name="experimentId" value="@ViewData["ExperimentId"]" />
                            <input type="hidden" name="scientistId" value="@ViewData["SelectedScientistId"]" />
                            <select id="viewmode-dropdown" class="form-select" name="selectedViewMode" onchange="document.getElementById('viewmode-form').submit()">
                                @foreach (var mode in viewMode)
                                {
                                    <option value="@mode" selected="@(mode == selectedViewMode)">@mode</option>
                                }
                            </select>
                        </form>
                    </div>
                    <div class="spia" title="@connectionMessage">
                        <div class="@connectionLightIndicator"></div>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - Concordia Lab - <a asp-area="" asp-controller="Home" asp-action="About">About</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<script>
    $(function () {
        var currentAction = "@(ViewContext.RouteData.Values["action"].ToString())";
        var experimentScientistIds = @(ViewData["ExperimentScientistIds"] != null ? Html.Raw(Json.Serialize(ViewData["ExperimentScientistIds"])) : "[]");
        
        $('#scientist-dropdown').change(function () {
            var selectedScientistId = this.value;
            var selectedScientistIsInExperiment = experimentScientistIds.includes(parseInt(selectedScientistId));
            var selectedViewMode = document.getElementById('viewmode-dropdown').value;

            if (currentAction === "Detail" && selectedScientistIsInExperiment) {

                $('#scientist-form').attr('action', '/Home/Detail');

            } else if (selectedViewMode === "priority") {

                $('#scientist-form input[name="experimentId"]').remove();
                $('#scientist-form input[name="selectedViewMode"]').remove();
                $('#scientist-form').attr('action', '/Home/Priority');

            } else if (selectedViewMode === "status") {

                $('#scientist-form input[name="experimentId"]').remove();
                $('#scientist-form input[name="selectedViewMode"]').remove();
                $('#scientist-form').attr('action', '/Home/Index');

            }
            $('#scientist-form').submit();
        });

        $('#viewmode-dropdown').change(function () {
            var selectedScientistId = document.getElementById('scientist-dropdown').value;
            var selectedScientistIsInExperiment = experimentScientistIds.includes(parseInt(selectedScientistId));
            var selectedViewMode = this.value;

            if (currentAction === "Detail" && selectedScientistIsInExperiment) {

                $('#viewmode-form').attr('action', '/Home/Detail');

            } else if (selectedViewMode === "priority") {

                $('#viewmode-form input[name="experimentId"]').remove();
                $('#viewmode-form input[name="selectedViewMode"]').remove();
                $('#viewmode-form').attr('action', '/Home/Priority');
            
            } else if (selectedViewMode === "status") {

                $('#viewmode-form input[name="experimentId"]').remove();
                $('#viewmode-form input[name="selectedViewMode"]').remove();
                $('#viewmode-form').attr('action', '/Home/Index');
            }

            $('#viewmode-form').submit();
        });
    });
</script>

<style>
    .select-box {
        display: flex;
        align-items: center;
        justify-content: start;
        background-color: whitesmoke;
        width: 36%;
        border-radius: 4px;
        margin: 4px 6px 4px 0px;
    }

    .select-topic {
        width:40%;
        padding: 8px 0px 0px 0px;
        text-align: center;
    }

    .select-dropdown {
        width: 60%;
    }

    .login {
        width: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 2px;
    }

    .spia {
        width: 20px;
        height: 20px;
        padding: 0px;
        border-radius: 50%;
        margin: 0px 12px 0px 6px;
        background-color: gray;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .light-off {
        width: 16px;
        height: 16px;
        border-radius: 50%;
        background-color: darkgreen;
    }

    .light-on {
        width: 16px;
        height: 16px;
        border-radius: 50%;
        background-color: lightgreen;
        box-shadow: 2px 2px 6px 2px rgba(40, 255, 50, 0.5);
    }
</style>